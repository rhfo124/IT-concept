IT 기본 용어

1. 클라우드
서버와 서버에서 작동하는 소프트웨어와 데이터베이스(일상적으로 일반인, B2C라고 하는 고객들이 많이 사용하기 때문에 중요함)

2. sw 개발과 운영 - SI와 SM의 차이
SI - system integration, 시스템을 구축하는 업무로 예전엔 기업에서 자체적으로 시스템을 구축했지만 전산 시스템이 복잡해지고 전문성이 필요해지면서 이를 대신해주는 하청, 파견업체가 생김. 이를 SI기업이라 한다. 대표적으로 삼성 SDS, LG CNS
 
SM - system management, 시스템을 운영하는 업무로 전산팀에 들어가 회사 시스템이 문제없이 작동하도록 유지하는 업무를 한다.
 

3. IT 아웃소싱 - IT서비스의 전문화(자원의 집중화)
기업이 고객이 되어 특정 전문화된 서비스를 다른 전문 기업을 통해 구입해 쓰는 것

5. AI - 머신러닝 - 딥러닝 : 학습 기반 AI
ai - 환경을 인지하고 목표를 성공적으로 달성할 가능성을 극대화 하도록 조치를 취할 수 있는 시스템

머신러닝 - ai의 하위 집합으로 컴퓨터를 프로그래밍하는 대신 컴퓨터가 데이터로 학습하고 경험을 통해 개선하도록 훈련을 하는데 중점을 둔다.
(알고리즘 - 어떠한 문제를 해결하는 계산을 실행하기 위한 단계적 절차)

딥러닝 - 머신러닝의 하위 집합으로 학습 과정 동안 예시 데이터에서 얻은 일반적인 규칙을 독립적으로 구축(훈련)


6. 프로토타입 - 본격적인 상품화에 앞서 성능을 검증ㆍ개선하기 위해 간단히 핵심 기능만 넣어 제작한 기본 모델
본격적으로 제품 개발ㆍ생산에 들어가면 도중에 중단하거나 취소하는 것이 쉽지 않으므로 사전에 프로토타입을 제작하고 검증 과정을 거쳐 위험 부담을 최소화한다.

   파일럿 - 이미 검증된 기술을 대규모 프로젝트 진행에 앞서 소규모로 진행하는 시험 프로젝트 단계

   PoC  - Proof Of Concept, 말 그대로 개념 증명으로 기존에 없던 솔루션을 프로젝트에 도입하기 앞서 검증을 하는 단계

   BMT - Bench Marking Test, 여러 개의 제품의 성능에 대한 비교 시험을 반복해 성능을 객관적으로 평가하는 것
   제품의 품질 정보가 없을 때 bmt를 통해 존재하는 제품들과 상호 비교해 제품의 품질을 상대적으로 평가하기도 한다.

※온프레미스 - 필요한 시스템을 구축하기 위해 하드웨어와 소프트웨어를 구입하여 시스템 구성 상황에 맞게 환경을 구성하는 것
  (단점 : 보안 문제와 인프라가 복잡해지는 환경에서 유지보수가 용이하지 못하다)

소프트웨어 공학 - 개발방법론
Waterfall Method : 프로젝트의 모든 단계(예: 분석, 설계, 개발 및 테스트)를 통해 폭포수처럼 흐르는 순차적 개발 프로세스


네트워크 - 용어와 이해

OSI 7계층
물리 - 데이터링크 - 네트워크 - 전송 - 세션 - 표현 - 응용

SSL - Secure Sockets Layer, 보안 소켓 계층, 웹 서버와 브라우저 사이에 전송되는 데이터를 암호화하여 인터넷 연결을 보호하기 위한 기술
(TSL은 SSL의 향상된 버전, 웹사이트가 SSL/TLS 인증서로 보호되는 경우 HTTPS가 URL에 표시)

L2TP - Layer2 Tunneling Protocol, 터널링 프로토콜, PPTP와 L2F의 결합된 형태로 L2TP는 자체적으로 암호화 기능이 없기 때문에 IPsec이라는 보안 기술과 함께 사용

IPSEC - Internet Protocol Security, 인증과 보안통신 세션의 각 ip패킷을 암호화하고 인증하는 인터넷 프로토콜.

PPTP - Point to Point Tunneling Protocol, 포인트간 터널링 프로토콜, IP를 통과하는 모든 패킷을 암호화하기 때문에 모든 운영체제에서 사용 가능한 장점

컴퓨터 - 자료검색
선형탐색 : 
기억 장소의 처음부터 차례대로 탐색, 자료가 정렬되어 있지 않아도 가능

이진탐색 : 처음 값과 마지막 값에 대한 중간 값을 설정한 후 키 값과 비교해서 탐색, 자료가 정렬되어 있어야 가능

블록탐색 : 자료를 일정 단위의 집합으로 구분하여 각각을 블록으로 구성, 각 블록의 최댓값의 위치를 인덱스로 구성


컴퓨터 구조

캐시 메모리 - cpu와 메모리의 속도차이로 인한 병목 현상을 완화하기 위해 사용
주 기억 장치 - 램 : 프로그램이나 데이터가 기억되는 장소
하드디스크 - 보조기억장치
플래시 메모리 - 전원이 끊겨도 저장된 정보가 지워지지 않는 기억장치
CPU(중앙처리장치) - 컴퓨터 시스템 전체를 제어하는 장치로 다양한 입력 장치로부터 자료를 받아서 처리한 후 그 결과를 출력장치로 보내는 과정을 제어하고 조정하는 것
보조기억장치 : 컴퓨터 외부에서 프로그램, 데이터를 보관하기 위한 기억장치


1. 프로그래밍 언어 - 사람의 언어로 기술하게끔 만들어 주는 컴퓨터 언어
컴파일러 - 특정 프로그래밍 언어로 쓰여 있는 문서를 다른 프로그래밍 언어로 옮기는 언어 번역 프로그램
인터프리터 - 컴파일러랑 유사한데 컴파일러와는 다르게 라인 바이 라인으로 읽어서 동적으로 실행하도록 한 것

2. 개발을 위한 TOOL(이해하는 수준 정도만)

3. 변수의 의미 - 데이터타입 변수명 = 변수의 값;
*프로그램에서 '='는 대입의 개념

4. 자료형의 의미 - 정수형, 실수형, 문자형, 문자열형, 바이트형, 정보의 의미

5. 상수와 변수의 차이 - 변수는 변할 수 있는 수를 말하고 상수는 변하지 않는 수

6. 형 변환의 의미
EX) 실수형 데이터를 정수형으로 받았을 경우 값의 차이가 발생할 수 있기 때문에
이를 위해 자료가 중간에 왜곡되지 않으려면 정확하게 어떤 타입을 쓸지 정해여 함

7. 연산자의 의미 
시프트 연산자 : 각 변수의 비트를 지정한 횟수대로 이동(3 << 3은 3 * 23과 같으므로 24가 되고, 24 >> 2는 24 / 22과 같으므로 6)
&와 && 차이 - & 는 앞의 조건식이 false여도 뒤의 조건식이 true인지 false인지 판별한다. 
               && 는 앞의 조건식이 false 라면, 뒤의 조건식은 신경 쓰지 않는다.
(조건문 수식을 세울 때 해당객체가 null 인지 아닌지 판별하는 용도로 &&연산자를 사용할 수 있다.)

8. 조건문/ 반복문
조건문의 의미와 필요한 이유 - 조건(조건식의 평가 결과)에 따라 코드 블록(블록문)의 실행을 결정할 때 사용하는 문법
반복문의 의미와 필요한 이유 - 조건식의 평가 결과가 참인 경우 실행, 다시 조건식을 평가해 여전히 참이면 코드 블럭을 실행하여 조건식이 거짓이 될 때까지 반복하여 실행할 때 사용하는 문법
조건문을 통해 많은 상황 즉 조건에 따른 결정을 만듦으로서 이러한 현실의 상황을 모델링


9. 함수(메소드)의 의미 - 철저하게 알고 오기
함수의 아규먼트 - 매개변수에 전달되는 값
함수의 리턴 값 


10. 배열의 의미 - 배열이 필요한 의미, 다차원 배열이 뭔지
하나의 변수에 여러 데이터를 관리할 수 있기 때문에, 코드의 가독성이 높아지고, 변수의 수를 줄여주고, 연산에 편리하다.
배열의 길이 - index 요소는 0부터 시작하기 때문에 index 수는 length -1
다차원 배열


11. 객체(구조체)형태의 데이터 타입 - 데이터를 군집으로 가지고 있는 것으로 
객체형 데이터 타입과 배열


12. 라이브러리(API)란? - 소프트웨어 개발 시 사용되는 프로그램의 구성요소로 공통으로 사용될 수 있는 특정한 기능을 모듈화한 것
API - 컴퓨터나 컴퓨터 프로그램 사이의 연결하여 서로 다른 프로그램에서 요청과 응답을 주고 받을 수 있게 만든 체계
실제 실행되어 기능을 수행하는 단편화된 프로그램이라는 점이 API와 다르며 프로그래밍 언어에서 라이브러리를 사용할 수 있도록 소스코드 수준에서 인터페이스를 노출시킨 것이 바로 API다

데이터통신 - 입출력 장치와 컴퓨터를 통신회선으로 이용하여 넓은 범위의 데이터 처리와 전송을 가능하게 합 

화면 GUI 컴포넌트 - gui는 그래픽 사용자 인터페이스로 사용자가 편리하게 사용할 수 있도록 입출력 등의 기능을 알기 쉬운 아이콘으로 나타낸 것(휴지통, 내컴퓨터 등)

HTML - 우리가 보는 웹페이지가 어떻게 구조화되어 있는지 브라우저로 하여금 알 수 있도록 하는 마크업 언어(마크업 언어란 태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어)
CSS - HTML에서 스타일을 담당(글씨 색, 폰트, 크기 등)
JS - 프로그램 컨트롤 하는 것, 웹 브라우저에서 HTML 문서에 내장한 JS를 읽으면 즉시 해석되어 소스코드가 실행된 결과를 눈으로 볼 수 있는 프론트 엔드 언어


데이터베이스(SQL)

1. 데이터베이스
 프로그램 언어와 데이터베이스의 관계 - 프로그램과 데이터베이스는 서로 소통해야하는 관계를 가지고 있다. 꼭 소통해야하는 것은 아니지만 계산기, 그림판 등의 간단한 시스템이 아닌 좋은 프로그램을 만들기 위해선 소통해야함
 데이터베이스 형태(특히 관계형 데이터베이스)
 
2. SELECT 구분
SELECT FROM WHERE

3. 그외의 구분
INSERT, CREATE, UPDATE, DROP, DELETE
(1~3 DML과 DDL의 개념)
DML - 데이터 조작어 SELECE, INSERT, UPDATE, DELETE 
데이터베이스에 들어있는 데이터를 조회, 검색하고, 테이블에 들어 있는 데이터에 변형할 때 사용

DDL - 데이터 정의어 CREATE, ALTER, DROP, RENAME, TRUNCATE
테이블과 같은 데이터 구조를 정의하는데 사용

4. 데이터베이스 설계
 제약조건
 키(pk, fk)


5. 서브쿼리(예시 이해)
 select stuno, stuname, stugrade
 from student
 where stugrade = (select stugrade from student where stuid = 'st001');


6. addition : 조인(inner, outer, cross, self)
view - 보안강화와 query의 단순화를 위해 사용(query는 데이터베이스에 정보를 요청하는 것)
데이터베이스 함수 등 



erp - 전사적 자원 관리로 재무, 제조, 공급망, 인사관리, 운영 전반의 비즈니스 프로세스를 자동화하고 관리하는 시스템으로 생산성 및 일의 효율성을 높인다.

abap - sap를 개발하는 언어로 문자열에 "" 대신 ' ', *와 "가 주석, data를 통해 변수 선언, 로컬 변수는 lc 사용해서 표현, New-Line로 줄 띄우기, 명령어는 공백 두고 처리, ; 대신 .로 문장 마무리

Odata service - RESTful API를 구축하고 사용하기 위한 모범 사례 집합, 프론트엔드를 위한 sap 백엔드와 통신하는 방법

CDS - 데이터베이스 개발자가 응용 프로그램 서비스가 UI 클라이언트에 노출하는 기본 데이터 모델을 만드는 데 사용할 수 있는 인프라

fiori - 프론트엔드 프레임워크로 UI기술은 SAPUI5에 기반하며 SAPUI5는 HTML5를 기반으로 하는 SAP표준 UI 기술이며 웹 프로토콜은 Odata를 사용

framework - 제공받은 일정한 요소와 틀, 규약을 가지고 무언가를 만드는 일

jquery - 빠르고 기능이 풍부한 JS 라이브러리




